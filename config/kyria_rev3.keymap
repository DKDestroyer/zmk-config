/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W      &kp E         &kp R  &kp T                                                               &kp Y       &kp U          &kp I    &kp O     &kp P  &kp BSLH
  &kp ESC  &kp A  &kp S      &kp D         &kp F  &kp G                                                               &kp H       &kp J          &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X      &kp C         &kp V  &kp B     &tog 1    &kp LEFT_WIN  &kp LC(LA(LSHFT))      &kp GRAVE  &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH     &kp P
                         &sk LCTRL  &kp LEFT_WIN  &mo 2  &kp SPACE  &sk LEFT_SHIFT          &kp SPACE  &kp BACKSPACE  &mo 3  &kp DELETE  &sk RIGHT_ALT
            >;
        };

        layer_1 {
            bindings = <
       &kp TAB  &kp Q  &kp W      &kp F   &kp P   &kp B                                                                    &kp J   &kp L         &kp U       &kp Y  &kp SEMICOLON  &kp BACKSLASH
    &kp ESCAPE  &kp A  &kp R      &kp S   &kp T   &kp G                                                                    &kp M   &kp N         &kp E       &kp I          &kp O        &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X      &kp C   &kp D   &kp V     &tog 0    &kp LEFT_WIN  &kp LA(LC(LEFT_SHIFT))      &kp GRAVE  &kp K   &kp H     &kp COMMA  &kp PERIOD      &kp SLASH         &trans
                              &kp LCTRL  &trans  &trans  &kp SPACE  &kp LEFT_SHIFT              &kp RETURN  &kp BACKSPACE  &mo 3  &trans  &kp LEFT_ALT
            >;
        };

        layer_2 {
            bindings = <
&trans      &kp ESCAPE  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9        &trans                                  &trans          &trans    &trans             &trans           &trans            &trans
&trans  &kp LEFT_SHIFT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0                                  &trans  &kp UNDERSCORE  &kp PLUS     &kp LEFT_BRACE  &kp RIGHT_BRACE          &kp PIPE
&trans          &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp ENTER  &trans  &trans  &trans  &trans  &trans          &trans    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE
                                            &trans        &trans        &trans  &trans  &trans  &trans  &trans   &mo 4          &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans    &trans  &kp UP_ARROW     &trans  &trans                                  &trans     &trans     &trans            &trans             &trans            &trans
&trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT  &trans                                  &trans  &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH
&trans  &trans    &trans        &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans      &kp C_VOL_DN    &kp C_VOLUME_UP  &kp K_PLAY_PAUSE
                                &trans     &trans   &mo 4  &trans  &trans  &trans  &trans  &trans     &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 0                                  &trans  &trans  &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
